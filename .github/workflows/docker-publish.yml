name: publish

on:
  push:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.actor }}/rentiverse-backend:latest
  IMAGE_NAME_FRONTEND: ${{ github.actor }}/rentiverse-ui:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker registry
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Clear Docker cache and rebuild backend image
        run: |
          cd backend
          docker build --no-cache . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}

      - name: Clear Docker cache and rebuild frontend image
        run: |
          cd frontend
          docker build --no-cache . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }} --build-arg REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }} --build-arg REACT_APP_RAZORPAY_KEY_ID=${{ secrets.REACT_APP_RAZORPAY_KEY_ID }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Connect and pull images
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"

      - name: Cleanup
        run: rm -rf ~/.ssh
