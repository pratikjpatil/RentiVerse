name: publish

on:
  push:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.actor }}/rentiverse-backend:latest
  IMAGE_NAME_FRONTEND: ${{ github.actor }}/rentiverse-ui:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      backend_image: ${{ steps.build_backend.outputs.image }}
      frontend_image: ${{ steps.build_frontend.outputs.image }}

    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker registry
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build backend image
        id: build_backend
        run: |
          cd backend
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          echo "Pushed backend image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}"
        output:
          image: ${{ steps.build_backend.outputs.image }}

      - name: Build frontend image
        id: build_frontend
        run: |
          cd frontend
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
          echo "Pushed frontend image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}"
        output:
          image: ${{ steps.build_frontend.outputs.image }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-images
          path: artifacts

      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Connect and pull images
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd ${{ secrets.WORK_DIR }}
          docker pull ${{ needs.build-and-push.outputs.backend_image }}
          docker pull ${{ needs.build-and-push.outputs.frontend_image }}
          exit
        "

      - name: Run docker-compose with updated images
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd ${{ secrets.WORK_DIR }}
          docker-compose down
          # Adjust this line to set environment variables in compose file
          # using ${{ secrets.KEY }}=${{ secrets.VALUE }} syntax
          docker-compose up -d backend=${{ needs.build-and-push.outputs.backend_image }} frontend=${{ needs.build-and-push.outputs.frontend_image }}
          exit
        "

      - name: Cleanup
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd ${{ secrets.WORK_DIR }}
          rm -rf ~/.ssh
          exit
        "

